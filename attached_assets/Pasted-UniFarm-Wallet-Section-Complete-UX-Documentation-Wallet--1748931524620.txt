UniFarm Wallet Section - Complete UX Documentation

Обзор раздела

Раздел Wallet (Кошелёк) предоставляет пользователям полный контроль над их цифровыми активами в экосистеме UniFarm. Включает управление балансами UNI и TON токенов, вывод средств и просмотр истории транзакций.

1. Структура страницы Wallet

1.1 Основные компоненты

┌─────────────────────────────────────┐
│ Заголовок: "Ваш TON-кошелёк"        │
├─────────────────────────────────────┤
│ BalanceCard (Карточка баланса)      │
├─────────────────────────────────────┤
│ WithdrawalForm (Форма вывода)       │
├─────────────────────────────────────┤
│ TransactionHistory (История)        │
└─────────────────────────────────────┘
1.2 Архитектура Error Boundary

Каждый компонент обернут в Error Boundary для устойчивости
WalletBalanceWithErrorBoundary
WithdrawalFormWithErrorBoundary
TransactionHistoryWithErrorBoundary
2. BalanceCard - Карточка баланса

2.1 Визуальная структура

┌─────────────────────────────────────────────────────┐
│ [🔄] Ваш баланс                        [⟳] [⟲]    │
├─────────────────────────────────────────────────────┤
│ ┌─────────────────────┐ ┌─────────────────────────┐ │
│ │ [💰] UNI Token      │ │ [Ⓣ] TON Balance        │ │
│ │ внутренний токен    │ │ блокчейн токен          │ │
│ │                     │ │                         │ │
│ │ 1,234.56789 UNI     │ │ 0.125 TON               │ │
│ │ ≈ $123.45           │ │ ≈ $5.67                 │ │
│ │                     │ │                         │ │
│ │ [↗] +0.000123 UNI/с │ │ [📊] Доступно для      │ │
│ │                     │ │      вывода             │ │
│ └─────────────────────┘ └─────────────────────────┘ │
└─────────────────────────────────────────────────────┘
2.2 Элементы интерфейса UNI секции

Заголовок блока:

Иконка: fas fa-coins (золотые монеты)
Текст: "UNI Token"
Подпись: "внутренний токен"
Отображение баланса:

Основная сумма: крупным шрифтом с анимацией при обновлении
Валюта: "UNI" серым цветом
USD эквивалент: мелким шрифтом под балансом
Индикатор скорости фарминга:

Зеленый бейдж с иконкой fas fa-arrow-trend-up
Формат: "+X.XXXXXX UNI / сек"
Адаптивный размер шрифта для мелких значений
Визуальные эффекты:

Градиентный фон: фиолетово-синий (#A259FF → #5945FA)
Неоновая подсветка при анимации
Пульсация при обновлении данных
2.3 Элементы интерфейса TON секции

Заголовок блока:

Иконка: fab fa-telegram (логотип Telegram)
Текст: "TON Balance"
Подпись: "блокчейн токен"
Отображение баланса:

Основная сумма: с точностью до 6 знаков
Валюта: "TON" серым цветом
USD эквивалент: актуальный курс
Статус доступности:

Зеленый бейдж: "Доступно для вывода"
Иконка: fas fa-check-circle
Визуальные эффекты:

Градиентный фон: сине-голубой (#0088CC → #00B2FF)
Анимация при обновлении баланса
2.4 Элементы управления

Кнопки обновления:

Обновить баланс: fas fa-sync-alt (с анимацией вращения)
Полное обновление: fas fa-redo-alt
Состояние загрузки: блокировка кнопок
WebSocket индикаторы:

Статус соединения (скрыт от пользователей)
Кнопка переподключения при ошибках
Счетчик ошибок (только для отладки)
2.5 Функциональность

Автоматическое обновление:

WebSocket соединение для real-time обновлений
Первичная загрузка при нулевом балансе
Предотвращение циклических обновлений
Уведомления:

Успешное обновление баланса
Ошибки соединения (минимальные)
Статус WebSocket подключения
Расчет скорости фарминга:

Формула: 0.000000289351851800 * depositAmount
Обновление при изменении депозита
Форматирование для мелких значений
3. WithdrawalForm - Форма вывода средств

3.1 Визуальная структура

┌─────────────────────────────────────────────────────┐
│ [💸] Вывод средств                                  │
├─────────────────────────────────────────────────────┤
│ Выберите валюту для вывода:                         │
│ ┌─────────┐ ┌─────────┐                             │
│ │   UNI   │ │   TON   │  ← активная                │
│ └─────────┘ └─────────┘                             │
│                                                     │
│ Адрес кошелька TON:                                 │
│ ┌─────────────────────────────────────────────────┐ │
│ │ UQA1...xyz (заполнено автоматически)            │ │
│ └─────────────────────────────────────────────────┘ │
│                                                     │
│ Сумма для вывода:                                   │
│ ┌─────────────────────────────────────────────────┐ │
│ │ 0.001                                    TON    │ │
│ └─────────────────────────────────────────────────┘ │
│ Доступно: 0.125 TON                                │
│                                                     │
│ ┌─────────────────────────────────────────────────┐ │
│ │            [💸] Создать заявку                  │ │
│ └─────────────────────────────────────────────────┘ │
└─────────────────────────────────────────────────────┘
3.2 Элементы формы

Заголовок секции:

Иконка: fas fa-money-bill-wave
Текст: "Вывод средств"
Градиентный фон с неоновой рамкой
Селектор валюты:

Две кнопки: UNI и TON
Активная кнопка: цветная подсветка
Переключение с уведомлением
Поле адреса кошелька:

Автозаполнение из профиля пользователя
Валидация формата TON адреса
Эффекты фокуса: подсветка рамки
Поле суммы:

Числовой ввод с валидацией
Отображение доступного баланса
Индикатор выбранной валюты справа
Кнопка отправки:

Текст: "Создать заявку"
Состояния: обычное, загрузка, успех, ошибка
Иконка меняется в зависимости от состояния
3.3 Валидация и ошибки

Правила валидации:

Минимальная сумма: 0.001 для TON, 1 для UNI
Максимальная сумма: не больше доступного баланса
Формат адреса: корректный TON адрес
Отображение ошибок:

Красные рамки полей с ошибками
Текст ошибки под полем
Общие ошибки в уведомлениях
Состояния кнопки:

Обычное: синий фон
Загрузка: спиннер + "Отправка..."
Успех: зеленый + галочка
Ошибка: красный + восклицательный знак
3.4 Успешная отправка

Анимация успеха:

Печатающийся текст подтверждения
Номер заявки в сообщении
Автоматическая очистка формы
Уведомления:

Мгновенное: "Заявка создана"
Подробное: с суммой и валютой
Длительность: 5 секунд
4. TransactionHistory - История транзакций

4.1 Визуальная структура

┌─────────────────────────────────────────────────────┐
│ [📜] История транзакций    [Все] [UNI] [TON]        │
├─────────────────────────────────────────────────────┤
│ ┌─────────────────────────────────────────────────┐ │
│ │ [💰] Farming Reward        +0.123 UNI  [Новая] │ │
│ │     01.06.2025 14:30      farming               │ │
│ │                                                 │ │
│ │ [🚀] TON Boost Purchase    -0.050 TON           │ │
│ │     01.06.2025 12:15      boost                │ │
│ │                                                 │ │
│ │ [💸] Withdrawal Request    -0.100 TON           │ │
│ │     31.05.2025 18:45      withdrawal           │ │
│ └─────────────────────────────────────────────────┘ │
└─────────────────────────────────────────────────────┘
4.2 Фильтры транзакций

Кнопки фильтра:

"Все": показать все транзакции
"UNI": только UNI токен транзакции
"TON": только TON токен транзакции
Визуальное состояние:

Активный фильтр: цветная подсветка
Неактивный: серый текст
Переходы: плавная анимация
4.3 Элементы транзакции

Иконка транзакции:

Круглый фон с цветом токена
Иконка зависит от типа операции:
fa-seedling: фарминг награды
fa-rocket: буст покупки
fa-arrow-up: вывод средств
fa-gift: бонусы и награды
Основная информация:

Название транзакции (жирным шрифтом)
Метка "Новая" для последних операций
Дата и время в читаемом формате
Источник операции в сером бейдже
Сумма транзакции:

Положительные: зеленый цвет с "+"
Отрицательные: красный цвет с "-"
Формат: точность зависит от токена
Валюта отображается справа
4.4 Состояния загрузки

Скелетон при загрузке:

5 заглушек транзакций
Анимированные серые блоки
Имитация структуры реальных данных
Пустые состояния:

Общее: "У вас пока нет транзакций"
По фильтру: "Транзакции типа X не найдены"
Кнопка сброса фильтров
Ошибки загрузки:

Красная иконка предупреждения
Кнопка "Повторить" для перезагрузки
Уведомления об ошибках
4.5 Прокрутка и пагинация

Скролл контейнер:

Максимальная высота: 400px
Кастомный скроллбар
Эффекты затухания сверху и снизу
Индикатор загрузки:

Спиннер при подгрузке данных
Не блокирует интерфейс
Показывается внизу списка
5. Error Boundary Components

5.1 WalletBalanceWithErrorBoundary

Обработка ошибок:

Заголовок: "Ошибка загрузки баланса"
Описание: инструкции для пользователя
Кнопка: "Обновить баланс"
Инвалидация кеша:

Сброс queries: /api/v2/users/{userId}
Сброс queries: /api/v2/wallet/balance/{userId}
5.2 WithdrawalFormWithErrorBoundary

Обработка ошибок:

Заголовок: "Ошибка загрузки формы вывода"
Описание: рекомендации по решению
Кнопка: "Обновить форму"
Инвалидация кеша:

Сброс queries: /api/v2/users/{userId}
Сброс queries: /api/v2/wallet/{userId}
5.3 TransactionHistoryWithErrorBoundary

Обработка ошибок:

Заголовок: "Ошибка загрузки истории транзакций"
Описание: альтернативные действия
Кнопка: "Обновить историю"
Инвалидация кеша:

Сброс queries: /api/transactions/{userId}
6. Цветовая схема и стили

6.1 Основные цвета

UNI Token элементы:

Основной: #A259FF (фиолетовый)
Вторичный: #5945FA (синий)
Фон иконки: bg-primary/20
Текст суммы: text-green-400 (при обновлении)
TON Token элементы:

Основной: #0088CC (голубой)
Вторичный: #00B2FF (светло-голубой)
Фон иконки: bg-blue-500/20
Статус: text-green-400
Транзакции:

Положительные: text-green-400
Отрицательные: text-red-400
Нейтральные: text-blue-400
6.2 Градиенты и эффекты

Фоновые градиенты:

Карточки: радиальные градиенты с низкой прозрачностью
Кнопки: линейные переходы цвета
Активные элементы: более яркие цвета
Неоновые эффекты:

Рамки: border-primary/30
Подсветка: при hover и активности
Пульсация: для анимированных элементов
7. Адаптивность и отзывчивость

7.1 Мобильная версия

BalanceCard:

Grid: grid-cols-1 на мобильных
Полная ширина карточек токенов
Уменьшенные отступы
WithdrawalForm:

Вертикальная компоновка элементов
Увеличенные поля ввода для touch
Кнопки на всю ширину
TransactionHistory:

Компактное отображение транзакций
Меньшие иконки и шрифты
Горизонтальная прокрутка фильтров
7.2 Планшетная версия

BalanceCard:

Grid: md:grid-cols-2 для планшетов
Сохранение пропорций карточек
Общие элементы:

Увеличенные touch-таргеты
Адаптивные шрифты
Оптимизированная навигация
7.3 Десктопная версия

Полная функциональность:

Все элементы управления видимы
Hover-эффекты для интерактивности
Расширенные подсказки
8. Интеграции и API

8.1 WebSocket соединение

Подключение:

Автоматическое при загрузке компонента
Переподключение при ошибках
Подписка на обновления пользователя
Обработка сообщений:

Обновления баланса
Новые транзакции
Системные уведомления
8.2 React Query интеграция

Кеширование:

Баланс: staleTime 5 минут
Транзакции: staleTime 5 минут
Автоматическая инвалидация при мутациях
Retry логика:

3 попытки при ошибках сети
Экспоненциальный backoff
Graceful fallback к кешированным данным
8.3 Сервисы и API

withdrawalService:

submitWithdrawal(): создание заявки на вывод
Валидация на клиенте и сервере
Обработка ошибок с конкретными сообщениями
transactionService:

fetchTransactions(): получение истории
Пагинация и фильтрация
Кеширование результатов
userContext:

Глобальное состояние пользователя
refreshBalance(): обновление баланса
refreshUserData(): полное обновление профиля
9. Accessibility (Доступность)

9.1 Keyboard Navigation

Tab-порядок:

Кнопки обновления баланса
Селектор валюты в форме
Поля ввода формы
Кнопка отправки
Фильтры транзакций
Focus indicators:

Видимые рамки для всех интерактивных элементов
Высокий контраст focus-состояний
9.2 Screen Reader Support

ARIA атрибуты:

Заголовки секций с правильными уровнями
Описания для полей ввода
Статус сообщения для состояний загрузки
Семантическая разметка:

Правильные HTML теги
Логическая структура документа
9.3 Цветовой контраст

WCAG 2.1 соответствие:

Коэффициент контраста минимум 4.5:1
Альтернативы для цветовых индикаторов
Четкие границы элементов
10. Производительность

10.1 Оптимизация рендеринга

React оптимизации:

useCallback для обработчиков событий
useMemo для вычисляемых значений
Условный рендеринг для предотвращения ненужных обновлений
Lazy loading:

Компоненты загружаются по требованию
Изображения и иконки оптимизированы
10.2 Управление состоянием

Локальное состояние:

Минимальное использование useState
Группировка связанных состояний
Глобальное состояние:

Context API для пользовательских данных
React Query для серверного состояния
10.3 Сетевые запросы

Дедупликация:

Автоматическая дедупликация одинаковых запросов
Кеширование с умными стратегиями обновления
Батчинг:

Группировка множественных обновлений
Оптимизация количества API вызовов
11. Тестирование и качество

11.1 Unit тесты

Компоненты:

Рендеринг с различными пропсами
Обработка пользовательских действий
Корректность вычислений
Сервисы:

API интеграции
Обработка ошибок
Валидация данных
11.2 Integration тесты

Пользовательские флоу:

Полный цикл вывода средств
Фильтрация транзакций
Обновление баланса
Error scenarios:

Сетевые ошибки
Неверные данные от API
Состояния Loading/Error
11.3 E2E тесты

Критические пути:

Вход в приложение → просмотр баланса
Создание заявки на вывод
Просмотр истории транзакций
12. Безопасность

12.1 Валидация данных

Клиентская валидация:

Zod схемы для всех форм
Санитизация пользовательского ввода
Проверка типов на runtime
Серверная валидация:

Дублирование всех проверок на сервере
Rate limiting для API эндпоинтов
CSRF защита
12.2 Безопасность транзакций

Подтверждения:

Двойная проверка сумм вывода
Показ итоговых данных перед отправкой
Логирование всех операций
Приватность:

Маскирование адресов кошельков в логах
Отсутствие приватных ключей в frontend коде
Шифрование чувствительных данных
Заключение

Раздел Wallet представляет собой комплексное решение для управления цифровыми активами в приложении UniFarm. Интерфейс сочетает в себе современные принципы UX дизайна с надежной функциональностью, обеспечивая пользователям безопасный и удобный способ управления их UNI и TON токенами.

Ключевые преимущества:

Интуитивный интерфейс с четкой визуальной иерархией
Реальное время обновлений через WebSocket соединения
Надежная обработка ошибок с Error Boundary компонентами
Адаптивный дизайн для всех типов устройств
Высокая производительность с оптимизированным управлением состоянием
Архитектура основана на современных практиках React разработки, обеспечивая масштабируемость и простоту сопровождения кода.