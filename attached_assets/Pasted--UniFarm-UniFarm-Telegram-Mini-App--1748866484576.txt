# UniFarm - Полная документация дизайна

## Обзор проекта
UniFarm - это Telegram Mini App для криптовалютного AirDrop взаимодействия с интеллектуальным управлением маршрутами и точной оптимизацией API endpoints.

### Технологический стек:
- React/TypeScript фронтенд с React Query
- Shadcn/UI для адаптивного дизайна
- Официальный фреймворк Telegram Mini App
- PostgreSQL с Drizzle ORM
- Express.js бэкенд с динамическим управлением подключениями
- Интеграция с TON Blockchain
- Продвинутая дедупликация маршрутов и обработка ошибок
- Многоязычная поддержка с комплексной системной диагностикой

---

## 1. Конфигурация темы (theme.json)

```json
{
  "variant": "professional",
  "primary": "hsl(270 100% 67%)",
  "appearance": "dark",
  "radius": 0.5
}
```

**Описание:**
- Темная профессиональная тема
- Основной цвет: фиолетовый (hsl(270 100% 67%))
- Радиус скругления: 0.5rem

---

## 2. Основные стили (client/src/index.css)

### Цветовая схема (CSS Variables):
```css
:root {
  --background: 240 13% 6%;        /* Темный фон */
  --foreground: 0 0% 90%;          /* Светлый текст */
  --card: 240 9% 11%;              /* Фон карточек */
  --primary: 270 100% 67%;         /* Фиолетовый акцент */
  --secondary: 240 5% 25%;         /* Вторичный цвет */
  --accent: 143 72% 59%;           /* Зеленый акцент */
  --success: 143 72% 53%;          /* Цвет успеха */
  --destructive: 0 63% 31%;        /* Цвет ошибки */
  --border: 240 5% 25%;            /* Цвет границ */
  --ring: 270 100% 67%;            /* Цвет фокуса */
}
```

### Специальные CSS классы:
```css
.green-gradient-text {
  background: linear-gradient(to right, var(--accent), #00FF99);
  background-clip: text;
  color: transparent;
}

.gradient-button {
  background: linear-gradient(to right, var(--primary), #B368F7);
}

.active-nav-item {
  color: var(--primary);
  border-bottom: 2px solid var(--primary);
}
```

### Анимации:

#### 1. Shimmer эффект
```css
@keyframes shimmer {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}
```

#### 2. Падающие частицы
```css
@keyframes fall {
  0% {
    transform: translateY(0) rotate(0deg);
    opacity: 1;
  }
  100% {
    transform: translateY(100vh) rotate(720deg);
    opacity: 0;
  }
}
```

#### 3. Свечение элементов
```css
@keyframes glowing {
  0% { 
    box-shadow: 0 0 5px rgba(162, 89, 255, 0.5);
    filter: brightness(1);
  }
  50% { 
    box-shadow: 0 0 20px rgba(162, 89, 255, 0.8); 
    filter: brightness(1.2);
  }
  100% { 
    box-shadow: 0 0 5px rgba(162, 89, 255, 0.5);
    filter: brightness(1);
  }
}
```

#### 4. Парящая анимация
```css
@keyframes float {
  0% { transform: translateY(0px); }
  50% { transform: translateY(-5px); }
  100% { transform: translateY(0px); }
}

.float-animation {
  animation: float 3s ease-in-out infinite;
}
```

#### 5. Пульсация бустов
```css
@keyframes pulse-boost {
  0% {
    transform: scale(1);
    filter: brightness(1);
  }
  50% {
    transform: scale(1.05);
    filter: brightness(1.2);
  }
  100% {
    transform: scale(1);
    filter: brightness(1);
  }
}
```

#### 6. Металлический эффект
```css
@keyframes metallic-shine {
  0% {
    opacity: 0.2;
    background-position: -100% 0;
  }
  50% {
    opacity: 0.3;
    background-position: 200% 0;
  }
  100% {
    opacity: 0.2;
    background-position: -100% 0;
  }
}

.metallic-effect {
  background: linear-gradient(90deg, 
    rgba(255, 255, 255, 0) 0%, 
    rgba(255, 255, 255, 0.3) 50%, 
    rgba(255, 255, 255, 0) 100%);
  background-size: 200% 100%;
  animation: metallic-shine 5s ease infinite;
}
```

### Кастомные скроллбары:
```css
.custom-scrollbar::-webkit-scrollbar {
  width: 6px;
}

.custom-scrollbar::-webkit-scrollbar-thumb {
  background: linear-gradient(180deg, #A259FF 0%, #B368F7 100%);
  border-radius: 8px;
  box-shadow: 0 0 4px rgba(162, 89, 255, 0.3);
}
```

---

## 3. Архитектура страниц

### 3.1 Dashboard.tsx - Главная страница
```tsx
import WelcomeSection from '@/components/dashboard/WelcomeSection';
import IncomeCardNew from '@/components/dashboard/IncomeCardNew';
import ChartCard from '@/components/dashboard/ChartCard';
import BoostStatusCard from '@/components/dashboard/BoostStatusCard';
import DailyBonusCard from '@/components/dashboard/DailyBonusCard';

const Dashboard: React.FC = () => {
  return (
    <div>
      <WelcomeSection />
      <IncomeCardNew />
      <ChartCard />
      <BoostStatusCard />
      <DailyBonusCard />
    </div>
  );
};
```

### 3.2 Farming.tsx - Страница фарминга
```tsx
// Интерфейс с двумя вкладками (UNI/TON фарминг)
<Tabs defaultValue="uni" className="w-full mb-6">
  <TabsList className="grid w-full grid-cols-2 mb-6">
    <TabsTrigger value="uni">UNI Фарминг</TabsTrigger>
    <TabsTrigger value="ton">TON Фарминг</TabsTrigger>
  </TabsList>
  
  <TabsContent value="uni">
    <UniFarmingCardWithErrorBoundary userData={userData} />
    <BoostPackagesCardWithErrorBoundary userData={userData} />
  </TabsContent>
  
  <TabsContent value="ton">
    <TonFarmingStatusCardWithErrorBoundary />
    <ActiveTonBoostsCardWithErrorBoundary />
    <TonBoostPackagesCardWithErrorBoundary />
  </TabsContent>
</Tabs>
```

### 3.3 Missions.tsx - Страница заданий
```tsx
const Missions: React.FC = () => {
  return (
    <div className="p-4">
      <h1 className="text-xl font-semibold text-white mb-4">
        Выполняй задания — получай UNI
      </h1>
      <MissionStatsWithErrorBoundary />
      <MissionsListWithErrorBoundary />
    </div>
  );
};
```

### 3.4 Friends.tsx - Реферальная система
```tsx
// Включает компоненты:
// - UniFarmReferralLink - генерация реферальных ссылок
// - ReferralLevelsTable - таблица многоуровневых комиссий
// - Анимированный блок с информацией о бонусах
```

### 3.5 Wallet.tsx - TON кошелек
```tsx
const Wallet: React.FC = () => {
  return (
    <div>
      <h1 className="text-xl font-semibold text-white">Ваш TON-кошелёк</h1>
      <WalletBalanceWithErrorBoundary />
      <WithdrawalFormWithErrorBoundary />
      <TransactionHistoryWithErrorBoundary />
    </div>
  );
};
```

---

## 4. Компоненты макета

### 4.1 App.tsx - Корневой компонент
**Основные функции:**
- Авторизация через Telegram WebApp
- Управление состоянием пользователя
- Восстановление сессий
- Маршрутизация между страницами
- Интеграция с TonConnect

### 4.2 Header.tsx - Шапка приложения
```tsx
const Header: React.FC = () => {
  return (
    <header className="fixed top-0 right-0 p-2 z-50">
      <div className="flex justify-end">
        <TonConnectButton />
      </div>
    </header>
  );
};
```

### 4.3 NavigationBar.tsx - Нижняя навигация
```tsx
// 5 основных вкладок:
// - dashboard: Главная
// - farming: Фарминг  
// - missions: Задания
// - friends: Друзья
// - wallet: Кошелек

// Использует FontAwesome иконки
// Активная вкладка выделяется классом active-nav-item
```

---

## 5. Анимационные компоненты

### 5.1 ConfettiEffect.tsx (184 строки)
**Функциональность:**
- Canvas-анимация конфетти
- 3 типа частиц: квадраты, круги, треугольники
- Физика гравитации и вращения
- Настраиваемые цвета и количество частиц

**Ключевые параметры:**
```tsx
interface ConfettiEffectProps {
  active: boolean;
  onComplete?: () => void;
  duration?: number;
  colors?: string[];
  particleCount?: number;
  spread?: number;
  gravity?: number;
}
```

### 5.2 Fireworks.tsx (409 строк)
**Функциональность:**
- Сложные фейерверки с ракетами
- 4 типа взрывов: круговой, кольцевой, спиральный, хаотичный
- Реалистичная физика частиц
- Световые эффекты и вспышки

**Типы взрывов:**
1. **Круговой:** Равномерное распределение частиц
2. **Кольцевой:** Частицы одинаковой скорости
3. **Спиральный:** Градиент цветов по спирали
4. **Хаотичный:** Разная скорость и размер частиц

---

## 6. Ключевые дизайн-компоненты

### 6.1 WelcomeSection.tsx - Приветственная карточка
**Особенности дизайна:**
- Градиентный фон с анимацией
- 3D монета UniFarm с металлическими эффектами
- Плавающая анимация логотипа
- Индикатор подключенного TON кошелька

**CSS классы:**
```css
.welcome-card-bg {
  background: linear-gradient(120deg, 
    rgba(162, 89, 255, 0.8), 
    rgba(179, 104, 247, 0.6), 
    rgba(130, 71, 204, 0.7),
    rgba(110, 61, 173, 0.7));
  background-size: 200% 200%;
  animation: card-gradient 15s ease infinite;
}

.coin-3d-effect {
  animation: coin-rotate 5s ease-in-out infinite;
  transform-style: preserve-3d;
  perspective: 1000px;
}
```

### 6.2 IncomeCardNew.tsx - Карточка прогноза доходов
**Функциональность:**
- Анимированные счетчики с нарастающими значениями
- Отображение UNI и TON доходов за час/день
- Эффекты пульсации при обновлении данных
- Автообновление каждые 15 секунд

**Анимация счетчиков:**
```tsx
// Плавная анимация с замедлением в конце
const easedProgress = 1 - Math.pow(1 - progress, 3);
setDisplayedHourRate(startValue + (targetValue - startValue) * easedProgress);
```

---

## 7. Специализированные компоненты по разделам

### 7.1 Dashboard компоненты:
- **WelcomeSection:** Приветствие с логотипом UniFarm
- **IncomeCardNew:** Прогноз доходов UNI/TON
- **ChartCard:** Графики доходности
- **BoostStatusCard:** Статус активных бустов
- **DailyBonusCard:** Ежедневные бонусы

### 7.2 Farming компоненты:
- **UniFarmingCard:** Основной UNI фарминг
- **BoostPackagesCard:** UNI буст-пакеты
- **TonFarmingStatusCard:** Статус TON фарминга
- **TonBoostPackagesCard:** TON буст-пакеты
- **ActiveTonBoostsCard:** Активные TON бусты

### 7.3 Missions компоненты:
- **MissionsList:** Список доступных заданий
- **MissionStats:** Статистика выполнения
- **MissionCard:** Индивидуальные карточки заданий

### 7.4 Friends компоненты:
- **UniFarmReferralLink:** Генерация реферальных ссылок
- **ReferralLevelsTable:** Таблица уровней комиссий
- **ReferralTree:** Дерево рефералов (до 20 уровней)

### 7.5 Wallet компоненты:
- **WalletBalance:** Отображение баланса
- **WithdrawalForm:** Форма вывода средств
- **TransactionHistory:** История транзакций

### 7.6 TON-boost компоненты:
- **TonBoostPackages:** Пакеты TON бустов
- **ActiveTonBoosts:** Активные TON бусты
- **TonFarmingStatus:** Статус TON фарминга

---

## 8. UI Foundation (shadcn/ui)

### Базовые компоненты:
- **Button:** Настраиваемые кнопки с вариантами
- **Card:** Карточки с тенями и границами
- **Dialog:** Модальные окна
- **Form:** Формы с валидацией
- **Input:** Поля ввода
- **Tabs:** Переключение между вкладками
- **Toast:** Уведомления
- **Progress:** Индикаторы прогресса
- **Select:** Выпадающие списки

### ErrorBoundary компоненты:
Каждый основной компонент обернут в ErrorBoundary для повышения стабильности:
```tsx
// Примеры:
// - UniFarmingCardWithErrorBoundary
// - MissionsListWithErrorBoundary  
// - WalletBalanceWithErrorBoundary
// - TransactionHistoryWithErrorBoundary
```

---

## 9. Адаптивность и мобильная оптимизация

### Breakpoints:
- **sm:** 640px+
- **md:** 768px+
- **lg:** 1024px+
- **xl:** 1280px+

### Мобильная навигация:
- Фиксированная нижняя панель навигации
- Оптимизированные размеры touch-элементов
- Горизонтальная прокрутка для длинных списков

### Адаптивные сетки:
```css
.grid-cols-2        /* 2 колонки */
.md:grid-cols-3     /* 3 колонки на планшетах */
.lg:grid-cols-4     /* 4 колонки на десктопе */
```

---

## 10. Производительность и оптимизация

### React Query настройки:
- **staleTime:** 60000ms для кэширования данных
- **refetchInterval:** 15000ms для автообновления
- **refetchOnWindowFocus:** false для экономии запросов

### Lazy loading:
- Компоненты загружаются по требованию
- Изображения с ленивой загрузкой
- Виртуализация длинных списков

### Анимации:
- Использование CSS transforms вместо изменения layout
- RequestAnimationFrame для плавных анимаций
- Debouncing для обработчиков событий

---

## 11. Системы уведомлений

### NotificationContainer:
- Toast уведомления для действий пользователя
- Уведомления об ошибках и успехах
- Автоматическое скрытие через заданное время

### WebSocket уведомления:
- Реальное время обновления балансов
- Уведомления о завершении фарминга
- Статус подключения к серверу

---

## 12. Интеграция с Telegram

### TelegramInitializer:
- Инициализация Telegram WebApp API
- Обработка данных пользователя
- Настройка кнопок Telegram

### TelegramWebAppCheck:
- Проверка доступности Telegram API
- Fallback для веб-версии
- Диагностика проблем подключения

---

## 13. Контексты приложения

### UserProvider:
- Глобальное состояние пользователя
- Управление авторизацией
- Сохранение данных в localStorage

### WebSocketProvider:
- Подключение к WebSocket серверу
- Обработка реального времени событий
- Автоматическое переподключение

### NotificationProvider:
- Централизованная система уведомлений
- Очередь сообщений
- Настройки отображения

---

## 14. Безопасность и обработка ошибок

### ErrorBoundary:
- Перехват JavaScript ошибок
- Graceful degradation интерфейса
- Логирование ошибок для анализа

### API безопасность:
- Валидация всех входящих данных
- Защита от XSS атак
- Ограничение частоты запросов

### Telegram безопасность:
- Проверка подлинности initData
- Валидация пользовательских токенов
- Защита от подделки запросов

---

## 15. Заключение

UniFarm представляет собой современное Telegram Mini App с:

✅ **Профессиональным дизайном:** Темная тема с фиолетовыми акцентами  
✅ **Rich анимациями:** 20+ типов анимаций и эффектов  
✅ **Адаптивностью:** Оптимизация для всех устройств  
✅ **Производительностью:** React Query + оптимизированные компоненты  
✅ **Стабильностью:** ErrorBoundary + обработка ошибок  
✅ **Интеграцией:** TON Blockchain + Telegram WebApp API  

Приложение готово к продакшену и обеспечивает отличный пользовательский опыт для криптовалютного фарминга и реферальной программы.

---

*Документация создана для проекта UniFarm v2.0*  
*Дата: Июнь 2025*