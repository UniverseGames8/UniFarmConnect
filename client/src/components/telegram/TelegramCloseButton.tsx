/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –∫–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è Telegram Mini App
 * 
 * –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –∑–∞–∫—Ä—ã—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
 * —á–µ—Ä–µ–∑ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π Telegram.WebApp.close() API
 */

import React from 'react';
import { Button } from "@/components/ui/button";
import { SafeTelegramAPI } from '../../services/telegramErrorService';

interface TelegramCloseButtonProps {
  variant?: 'default' | 'outline' | 'ghost' | 'destructive';
  size?: 'sm' | 'default' | 'lg';
  className?: string;
  showIcon?: boolean;
}

const TelegramCloseButton: React.FC<TelegramCloseButtonProps> = ({
  variant = 'outline',
  size = 'default',
  className = '',
  showIcon = true
}) => {
  
  const handleClose = async () => {
    try {
      console.log('[TG CLOSE BUTTON] üö™ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É –∑–∞–∫—Ä—ã—Ç–∏—è');
      
      // –í—ã–∑—ã–≤–∞–µ–º –±–µ–∑–æ–ø–∞—Å–Ω—ã–π –º–µ—Ç–æ–¥ –∑–∞–∫—Ä—ã—Ç–∏—è
      const success = await SafeTelegramAPI.close();
      
      if (success) {
        console.log('[TG CLOSE BUTTON] ‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–∫—Ä—ã—Ç–æ');
      } else {
        console.warn('[TG CLOSE BUTTON] ‚ö†Ô∏è –ó–∞–∫—Ä—ã—Ç–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ (–≤–æ–∑–º–æ–∂–Ω–æ, –Ω–µ –≤ Telegram)');
        
        // Fallback –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–∞
        if (typeof window !== 'undefined' && window.history.length > 1) {
          window.history.back();
        }
      }
    } catch (error) {
      console.error('[TG ERROR] TelegramCloseButton ‚Äî Failed to close app:', error);
    }
  };

  return (
    <Button
      onClick={handleClose}
      variant={variant}
      size={size}
      className={className}
    >
      {showIcon && <span className="mr-2">üö™</span>}
      –ó–∞–∫—Ä—ã—Ç—å UniFarm
    </Button>
  );
};

export default TelegramCloseButton;